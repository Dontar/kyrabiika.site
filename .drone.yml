kind: pipeline
type: kubernetes
name: ci

trigger:
  event:
    - push
  branch:
    - master
    - develop
    - feature/*
    - release/*
    - bugfix/*
    - hotfix/*

services:
  - name: db
    image: mongo:4-focal
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: database

steps:
  # Build source
  - name: install_packages_build
    image: node:alpine
    environment:
      NODE_OPTIONS: --openssl-legacy-provider
      DB_SERVER: mongodb://root:example@127.0.0.1:27017/kyrabiika?authSource=admin&readPreference=primary&ssl=false
    commands:
      - apk add --no-cache git libc6-compat
      - npm ci
      - npm run lint
      - npm run build

---
kind: pipeline
type: kubernetes
name: cd

trigger:
  event:
    - tag

services:
  - name: db
    image: mongo:4-focal
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: database

steps:
  # Build source
  - name: install_packages_build
    image: node:alpine
    environment:
      NODE_OPTIONS: --openssl-legacy-provider
      DB_SERVER: mongodb://root:example@127.0.0.1:27017/kyrabiika?authSource=admin&readPreference=primary&ssl=false
    commands:
      - apk add --no-cache libc6-compat
      - npm ci
      - npm run build
      - npm prune --production

  # Build docker image
  - name: build_docker_image
    image: plugins/docker
    settings:
      username:
        from_secret: registry_user
      password:
        from_secret: registry_pass
      repo: registry.local.net/kyrabiika-site
      insecure: true
      registry: registry.local.net
      auto_tag: true

  # Deploy docker image with helm
  - name: helm deploy
    image: bitsbeats/drone-helm3
    settings:
      # skip creation of kubeconfig (optional, default:false)
      # kube_skip: false

      # path to kubeconfig (optional, default:/root/.kube/config)
      # kube_config: /root/.kube/config

      # kubernetes api server (required)
      kube_api_server:
        from_secret: kube_api

      # kubernetes token (required)
      kube_token:
        from_secret: kube_token

      # kubernetes http ca (optional)
      kube_certificate:
        from_secret: kube_cert

      # disable kubernetes tls verify (optional, default:false)
      # kube_skip_tls: false

      # the helm chart to be deployed (required)
      chart: ./chart

      # helm release name (required)
      release: cookie

      # kubernets and helm namespace (required)
      namespace: cookie

      # helm lint option (optional, default:true)
      # lint: true

      # helm atomic option (optional, default:true)
      atomic: true

      # helm wait option (optional, default:true)
      wait: true

      # helm force option (optional, default:false)
      # force: false

      # helm cleanup option (optional, default:false)
      # cleanup_on_fail: false

      # helm dryrun option (optional, default:false)
      # dry_run: false

      # additonal helm repos (optional)
      # helm_repos:

      # helm update dependencies option (optional, default:false)
      update_dependencies: true

      # additional â€“set options (optional)
      values:
        - image.tag=${DRONE_TAG/v/}
        - service.main.ports.http.nodePort=30999
        # - imagePullSecrets[0].name=registry-local

      # additonal values files (optional)
      # vaules_yaml:
